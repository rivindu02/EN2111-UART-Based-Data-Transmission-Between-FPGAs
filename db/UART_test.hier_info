|invert_uart_transceiver_test
clk => clk.IN1
rst_n => rst.IN1
key1_n => key1_sync[0].DATAIN
txd << uart_tx:transmitter.tx
rxd => rxd.IN1
rx_data[0] << rx_data[0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] << rx_data[1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] << rx_data[2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] << rx_data[3].DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] << uart_rx:receiver.data
rx_data[5] << uart_rx:receiver.data
rx_data[6] << uart_rx:receiver.data
rx_data[7] << uart_rx:receiver.data
leds[0] << rx_data[0].DB_MAX_OUTPUT_PORT_TYPE
leds[1] << rx_data[1].DB_MAX_OUTPUT_PORT_TYPE
leds[2] << rx_data[2].DB_MAX_OUTPUT_PORT_TYPE
leds[3] << rx_data[3].DB_MAX_OUTPUT_PORT_TYPE
leds[4] << uart_rx:receiver.data
leds[5] << uart_rx:receiver.data
leds[6] << uart_rx:receiver.data
leds[7] << uart_rx:receiver.data
seg[0] << binary_to_7seg:seg_decoder.data_out
seg[1] << binary_to_7seg:seg_decoder.data_out
seg[2] << binary_to_7seg:seg_decoder.data_out
seg[3] << binary_to_7seg:seg_decoder.data_out
seg[4] << binary_to_7seg:seg_decoder.data_out
seg[5] << binary_to_7seg:seg_decoder.data_out
seg[6] << binary_to_7seg:seg_decoder.data_out


|invert_uart_transceiver_test|uart_tx:transmitter
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => shift_reg[8].CLK
clk => shift_reg[9].CLK
clk => bit_index[0].CLK
clk => bit_index[1].CLK
clk => bit_index[2].CLK
clk => bit_index[3].CLK
clk => tx~reg0.CLK
rst => shift_reg[0].PRESET
rst => shift_reg[1].PRESET
rst => shift_reg[2].PRESET
rst => shift_reg[3].PRESET
rst => shift_reg[4].PRESET
rst => shift_reg[5].PRESET
rst => shift_reg[6].PRESET
rst => shift_reg[7].PRESET
rst => shift_reg[8].PRESET
rst => shift_reg[9].PRESET
rst => bit_index[0].ACLR
rst => bit_index[1].ACLR
rst => bit_index[2].ACLR
rst => bit_index[3].ACLR
rst => tx~reg0.PRESET
start => always0.IN1
data[0] => shift_reg.DATAB
data[1] => shift_reg.DATAB
data[2] => shift_reg.DATAB
data[3] => shift_reg.DATAB
data[4] => shift_reg.DATAB
data[5] => shift_reg.DATAB
data[6] => shift_reg.DATAB
data[7] => shift_reg.DATAB
baud_tick => always0.IN1
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE


|invert_uart_transceiver_test|uart_rx:receiver
clk => rx_sync.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => bit_index[0].CLK
clk => bit_index[1].CLK
clk => bit_index[2].CLK
clk => bit_index[3].CLK
clk => state~5.DATAIN
rst => rx_sync.PRESET
rst => data[0]~reg0.ACLR
rst => data[1]~reg0.ACLR
rst => data[2]~reg0.ACLR
rst => data[3]~reg0.ACLR
rst => data[4]~reg0.ACLR
rst => data[5]~reg0.ACLR
rst => data[6]~reg0.ACLR
rst => data[7]~reg0.ACLR
rst => shift_reg[0].ACLR
rst => shift_reg[1].ACLR
rst => shift_reg[2].ACLR
rst => shift_reg[3].ACLR
rst => shift_reg[4].ACLR
rst => shift_reg[5].ACLR
rst => shift_reg[6].ACLR
rst => shift_reg[7].ACLR
rst => bit_index[0].ACLR
rst => bit_index[1].ACLR
rst => bit_index[2].ACLR
rst => bit_index[3].ACLR
rst => state~7.DATAIN
rx => rx_sync.DATAIN
baud_tick => state.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => bit_index.OUTPUTSELECT
baud_tick => bit_index.OUTPUTSELECT
baud_tick => bit_index.OUTPUTSELECT
baud_tick => bit_index.OUTPUTSELECT
baud_tick => shift_reg.OUTPUTSELECT
baud_tick => shift_reg.OUTPUTSELECT
baud_tick => shift_reg.OUTPUTSELECT
baud_tick => shift_reg.OUTPUTSELECT
baud_tick => shift_reg.OUTPUTSELECT
baud_tick => shift_reg.OUTPUTSELECT
baud_tick => shift_reg.OUTPUTSELECT
baud_tick => shift_reg.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => bit_index.OUTPUTSELECT
baud_tick => bit_index.OUTPUTSELECT
baud_tick => bit_index.OUTPUTSELECT
baud_tick => bit_index.OUTPUTSELECT
baud_tick => data.OUTPUTSELECT
baud_tick => data.OUTPUTSELECT
baud_tick => data.OUTPUTSELECT
baud_tick => data.OUTPUTSELECT
baud_tick => data.OUTPUTSELECT
baud_tick => data.OUTPUTSELECT
baud_tick => data.OUTPUTSELECT
baud_tick => data.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|invert_uart_transceiver_test|binary_to_7seg:seg_decoder
data_in[0] => Decoder0.IN3
data_in[1] => Decoder0.IN2
data_in[2] => Decoder0.IN1
data_in[3] => Decoder0.IN0
data_out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


